// <auto-generated />
using System;
using AngularLibrary;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AngularLibrary.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210816132813_initalcreate")]
    partial class initalcreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AngularLibrary.Entity.Author", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Author");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Maximilian",
                            LastName = "Vollendorf"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Frank",
                            LastName = "Bongers"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Michael",
                            LastName = "Wegelin"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Michael",
                            LastName = "Englbrecht"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Adam",
                            LastName = "Freeman"
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Ugurlu",
                            LastName = "Tugberk"
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "Alexander",
                            LastName = "Zeitler"
                        },
                        new
                        {
                            Id = 8,
                            FirstName = "Ali",
                            LastName = "Kheyrollahi"
                        });
                });

            modelBuilder.Entity("AngularLibrary.Entity.Book", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PublisherId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PublisherId");

                    b.ToTable("Book");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Location = "Büro 34",
                            Title = "jQuery - Das umfassende Handbuch"
                        },
                        new
                        {
                            Id = 2,
                            Location = "Büro 34",
                            Title = "SAP® - Schnittstellenprogrammierung"
                        },
                        new
                        {
                            Id = 3,
                            Location = "Büro 34",
                            Title = "Pro ASP.NET MVC 4"
                        },
                        new
                        {
                            Id = 4,
                            Location = "Büro 34",
                            Title = "Pro ASP.NET Web API"
                        });
                });

            modelBuilder.Entity("AngularLibrary.Entity.BookAuthor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("BookId");

                    b.ToTable("BookAuthor");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            BookId = 1
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            BookId = 1
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            BookId = 2
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 4,
                            BookId = 2
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 5,
                            BookId = 3
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 6,
                            BookId = 4
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 7,
                            BookId = 4
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 8,
                            BookId = 4
                        });
                });

            modelBuilder.Entity("AngularLibrary.Entity.BookPublisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("PublisherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("PublisherId");

                    b.ToTable("BookPublisher");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            PublisherId = 1
                        },
                        new
                        {
                            Id = 2,
                            BookId = 2,
                            PublisherId = 2
                        },
                        new
                        {
                            Id = 3,
                            BookId = 3,
                            PublisherId = 3
                        },
                        new
                        {
                            Id = 4,
                            BookId = 4,
                            PublisherId = 3
                        });
                });

            modelBuilder.Entity("AngularLibrary.Entity.Publisher", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Publisher");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Galileo Computing"
                        },
                        new
                        {
                            Id = 2,
                            Name = "SAP PRESS"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Apress"
                        });
                });

            modelBuilder.Entity("AngularLibrary.Entity.Book", b =>
                {
                    b.HasOne("AngularLibrary.Entity.Publisher", null)
                        .WithMany("Books")
                        .HasForeignKey("PublisherId");
                });

            modelBuilder.Entity("AngularLibrary.Entity.BookAuthor", b =>
                {
                    b.HasOne("AngularLibrary.Entity.Author", null)
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AngularLibrary.Entity.Book", null)
                        .WithMany()
                        .HasForeignKey("BookId");
                });

            modelBuilder.Entity("AngularLibrary.Entity.BookPublisher", b =>
                {
                    b.HasOne("AngularLibrary.Entity.Book", null)
                        .WithMany()
                        .HasForeignKey("BookId");

                    b.HasOne("AngularLibrary.Entity.Publisher", null)
                        .WithMany()
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AngularLibrary.Entity.Publisher", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
